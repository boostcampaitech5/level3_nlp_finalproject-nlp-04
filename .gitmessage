# 제목을 아랫줄에 작성, 제목 끝에 마침표 금지, 무엇을 했는지 명확하게 작성

# 본문(추가 설명)을 아랫줄에 작성
# 각 행은 72자로 제한
# 여러 변경 사항 작성시 '-' 로 구성

# See Also 아랫 줄 작성 (관련 참고 Git 이슈 번호 등) 

################ 
# Git Issue Close 코멘트 
# <키워드> #<이슈번호> <코멘트> 
# close, closes, closed -- 일반 개발 관련 이슈 
# fix, fixed -- 버그 Fix 관련 이슈 
# resolve, resolves, resolved -- 문의사항 이슈 

################
# <Type> 리스트
# Feature[Model / Data / Params][소분류 내용] : 새로운 기능 추가
# Fix : 버그 수정
# Docs : 문서 수정
# Refactor : 코드 리팩토링
# Style : 코드 의미에 영향을 주지 않는 변경사항
# Branch : 브랜치 관리용 Commit
################
#  <Commit Comment Convention(C.C.C.)>
#  제목줄 첫글자 대문자로 작성
#  <Type>을 동사원형으로 작성(Fixed -> Fix, Testing -> Test)
#  제목줄은 마침표로 끝내지 않는다.
#  본문과 제목에는 빈줄을 넣어서 구분한다.
#  본문에는 "어떻게"(not How) 보다는 "왜"(Why)와 "무엇을"(What) 설명한다.
#  본문에 여러 사항 변경을 나타낼때는 "-"로 시작한다.
#  git config --global commit.template .gitmessage
################